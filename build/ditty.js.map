{"version":3,"file":"ditty.js","mappings":"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","sources":["webpack://ditty/./src/ditty.js"],"sourcesContent":["/* global jQuery:true */\n/* global dittyVars:true */\n\n// @codekit-append 'partials/helpers.js';\n\njQuery(function ($) {\n  // Setup strict mode\n  (function () {\n    \"use strict\";\n\n    var liveIds = {},\n      liveInterval = null;\n\n    /**\n     * Listen for ditty live update start triggers\n     *\n     * @since    3.0\n     * @return   null\n     */\n    /*\n    $( 'body' ).on( 'ditty_start_live_updates', function( event, dittyId ) {\n\t    liveIds[dittyId] = Math.floor( $.now()/1000 );\n\t    startLiveUpdates();\n\t  } );\n*/\n\n    /**\n     * Listen for ditty live update stop triggers\n     *\n     * @since    3.0\n     * @return   null\n     */\n    /*\n\t  $( 'body' ).on( 'ditty_stop_live_updates', function( event, dittyId ) {\n\t\t  var updated_liveIds = {};\n\t\t  $.each( liveIds, function( dittyId, timestamp ) {\n\t\t\t  if ( parseInt( dittyId ) !== parseInt( dittyId ) ) {\n\t\t\t  \tupdated_liveIds[dittyId] = timestamp;\n\t\t\t  }\n\t\t\t} );\n\t\t\tliveIds = updated_liveIds;\n\t\t\tif ( undefined === liveIds.length ) {\n\t\t\t\tstopLiveUpdates();\n\t\t\t}\n\t  } );\n*/\n\n    /**\n     * Live update a Ditty\n     *\n     * @since    3.0\n     * @return   null\n     */\n    function liveUpdate(dittyId, items) {\n      $('.ditty[data-id=\"' + dittyId + '\"]').each(function () {\n        var displayType = $(this).data(\"type\");\n        if (\"development\" === dittyVars.mode && window.console) {\n          console.log(`LIVE UPDATE: ${dittyId}`);\n        }\n        $(this)[`ditty_${displayType}`](\"loadItems\", items, \"static\");\n      });\n    }\n\n    /**\n     * Check for live updates\n     *\n     * @since    3.0.11\n     * @return   null\n     */\n    function checkLiveUpdates() {\n      var data = {\n        action: \"ditty_live_updates\",\n        live_ids: liveIds,\n        security: dittyVars.security,\n      };\n      $.post(\n        dittyVars.ajaxurl,\n        data,\n        function (response) {\n          if (response.updated_items) {\n            $.each(response.updated_items, function (dittyId, items) {\n              liveUpdate(dittyId, items);\n              liveIds[dittyId].timestamp = Math.floor($.now() / 1000);\n            });\n          }\n        },\n        \"json\"\n      );\n    }\n\n    /**\n     * Stop listening for live updates\n     *\n     * @since    3.0\n     * @return   null\n     */\n    // function stopLiveUpdates() {\n    //   if ( null !== liveInterval ) {\n    //     cancelAnimationFrame( liveInterval );\n    //     liveInterval = null;\n    //   }\n    // }\n\n    /**\n     * Start listening for live updates\n     *\n     * @since    3.0\n     * @return   null\n     */\n    function startLiveUpdates() {\n      if (null !== liveInterval || 1 > Object.keys(liveIds).length) {\n        return false;\n      }\n      cancelAnimationFrame(liveInterval);\n\n      var updateInterval = dittyVars.updateInterval\n          ? parseInt(dittyVars.updateInterval)\n          : 60,\n        startTime = Date.now();\n\n      function dittyLiveUpdatesLoop() {\n        var currTime = Date.now(),\n          passedTime = Math.floor((currTime - startTime) / 1000);\n\n        if (passedTime >= updateInterval) {\n          startTime = currTime;\n          checkLiveUpdates();\n        }\n        liveInterval = requestAnimationFrame(dittyLiveUpdatesLoop);\n      }\n      liveInterval = requestAnimationFrame(dittyLiveUpdatesLoop);\n    }\n\n    /**\n     * Update extension API calls\n     *\n     * @since    3.0\n     * @return   null\n     */\n    // function updateExtensionApis() {\n    // \tvar data = {\n    // \t\taction\t\t: 'ditty_api_background_updates',\n    // \t\tsecurity\t: dittyVars.security\n    // \t};\n    // \t$.post( dittyVars.ajaxurl, data, function() {\n    // \t}, 'json' );\n    // }\n\n    /**\n     * Setup the global Dittys\n     *\n     * @since    3.0\n     * @return   null\n     */\n    function setupGlobalDitty() {\n      $.each(dittyVars.globals, function (index, data) {\n        var selector = $(data.selector);\n        if (!data.ditty || undefined === selector[0]) {\n          return;\n        }\n        var $edit_links = data.edit_links ? data.edit_links : \"\";\n        var $ditty = $(\n          '<div class=\"ditty\" data-id=\"' +\n            data.ditty +\n            '\" data-ajax_load=\"1\">' +\n            $edit_links +\n            \"</div>\"\n        );\n        if (data.display && \"\" !== data.display) {\n          $ditty.attr(\"data-display\", data.display);\n        }\n        if (data.live_updates && \"1\" === String(data.live_updates)) {\n          $ditty.attr(\"data-live_updates\", \"1\");\n        }\n        if (data.custom_id && \"\" !== data.custom_id) {\n          $ditty.attr(\"id\", data.custom_id);\n        }\n        if (data.custom_classes && \"\" !== data.custom_classes) {\n          $ditty.addClass(data.custom_classes);\n        }\n        switch (data.position) {\n          case \"prepend\":\n            $(selector[0]).prepend($ditty);\n            break;\n          case \"before\":\n            $(selector[0]).before($ditty);\n            break;\n          case \"after\":\n            $(selector[0]).after($ditty);\n            break;\n          default:\n            $(selector[0]).append($ditty);\n            break;\n        }\n      });\n    }\n\n    /**\n     * Load all the dittys\n     *\n     * @since    3.0.11\n     * @return   null\n     */\n    function dittyInit() {\n      // Add the global Dittys\n      setupGlobalDitty();\n\n      $(\".ditty\").each(function () {\n        var $ditty = $(this),\n          ajax_load = $ditty.data(\"ajax_load\")\n            ? $ditty.data(\"ajax_load\")\n            : false,\n          live_updates = $ditty.data(\"live_updates\")\n            ? $ditty.data(\"live_updates\")\n            : false,\n          display_settings = $ditty.data(\"display_settings\")\n            ? $ditty.data(\"display_settings\")\n            : false,\n          layout_settings = $ditty.data(\"layout_settings\")\n            ? $ditty.data(\"layout_settings\")\n            : false,\n          editor = $ditty.data(\"show_editor\")\n            ? $ditty.data(\"show_editor\")\n            : false;\n\n        // Load the Dittys via ajax\n        if (ajax_load) {\n          var data = {\n            action: \"ditty_init\",\n            id: $ditty.data(\"id\") ? $ditty.data(\"id\") : false,\n            uniqid: $ditty.data(\"uniqid\") ? $ditty.data(\"uniqid\") : false,\n            display: $ditty.data(\"display\") ? $ditty.data(\"display\") : \"\",\n            display_settings: display_settings,\n            layout_settings: layout_settings,\n            editor: editor,\n            security: dittyVars.security,\n          };\n          $.post(\n            dittyVars.ajaxurl,\n            data,\n            function (response) {\n              // Make sure the display type exists\n              if (\n                !response.display_type ||\n                \"function\" !== typeof $ditty[\"ditty_\" + response.display_type]\n              ) {\n                if (window.console) {\n                  console.log(\n                    \"Ditty Display type not loaded:\",\n                    response.display_type\n                  );\n                }\n                return false;\n              }\n\n              // Load the ditty\n              $ditty[\"ditty_\" + response.display_type](response.args);\n\n              // Add to the liveIds\n              if (!editor && live_updates) {\n                liveIds[$ditty.data(\"id\")] = {\n                  timestamp: Math.floor($.now() / 1000),\n                  layout_settings: layout_settings,\n                };\n                startLiveUpdates();\n              }\n            },\n            \"json\"\n          );\n        } else {\n          if (!editor && live_updates) {\n            liveIds[$ditty.data(\"id\")] = {\n              timestamp: Math.floor($.now() / 1000),\n              layout_settings: layout_settings,\n            };\n            startLiveUpdates();\n          }\n        }\n      });\n    }\n    dittyInit();\n  })();\n});\n"],"names":["jQuery","$","liveIds","liveInterval","liveUpdate","dittyId","items","each","displayType","data","dittyVars","mode","window","console","log","checkLiveUpdates","action","live_ids","security","post","ajaxurl","response","updated_items","timestamp","Math","floor","now","startLiveUpdates","Object","keys","length","cancelAnimationFrame","updateInterval","parseInt","startTime","Date","dittyLiveUpdatesLoop","currTime","passedTime","requestAnimationFrame","setupGlobalDitty","globals","index","selector","ditty","undefined","$edit_links","edit_links","$ditty","display","attr","live_updates","String","custom_id","custom_classes","addClass","position","prepend","before","after","append","dittyInit","ajax_load","display_settings","layout_settings","editor","id","uniqid","display_type","args"],"sourceRoot":""}